using System;
using System.Data;
using System.Linq;
using System.Windows.Forms;
using SWIBLL;
using SWIBLL.Models;
using DXSWI.Forms;
using DevExpress.XtraEditors;

namespace DXSWI.Modules
{
    public partial class frCandidates : DevExpress.XtraEditors.XtraUserControl
    {
        CandidateManager mCandidateManager = new CandidateManager();
        public frCandidates()
        {
            InitializeComponent();
            init();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
            //sqlDataSource1.Fill();
        }

        private void init()
        {
            try {
                // load data in candidate table and show in grid control
                gcCandidates.DataSource = mCandidateManager.getCurrentPages();
            }
            catch(Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        private void gcCandidates_Click(object sender, EventArgs e)
        {
            
        }

        private void gridView1_FocusedRowChanged(object sender, DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs e)
        {
            if (e.FocusedRowHandle == DevExpress.XtraGrid.GridControl.AutoFilterRowHandle)
                gridView1.FocusedColumn = colFirstName;
            else if (e.FocusedRowHandle >= 0)
                gridView1.FocusedColumn = null;
            updateCurrentCandidate();

        }

        private void gridView1_ColumnFilterChanged(object sender, EventArgs e)
        {

        }
        void updateCurrentCandidate()
        {
            //frCandidates.
            if (gcCandidates.MainView == gridView1)
                gridView1.MakeRowVisible(gridView1.FocusedRowHandle);
            //get current selection object
            if (gridView1.SelectedRowsCount > 0)
            {
                int row = gridView1.GetSelectedRows().First();
                DataRow data_row = gridView1.GetDataRow(row); // for test
                //Candidate obj = Data.CreateItemFromRow<Candidate>(data_row);
                int canID = int.Parse(data_row["CandidateId"].ToString());
                ucCandidateManager1.setCurrentCandidate(canID,"");
            }
            // fill to ucCandidateManager form


            //OwnerForm.EnableEditContact(CurrentContact != null); // enable edit button
        }

        private void ucCandidateManager1_Load(object sender, EventArgs e)
        {

        }

        //public Candidate currentCandidate()
        //{
        //    if (gridView1.SelectedRowsCount > 0)
        //    {
        //        int row = gridView1.GetSelectedRows().First();
        //        DataRow data_row = gridView1.GetDataRow(row); // for test
        //        return Data.CreateItemFromRow<Candidate>(data_row);
        //    }
        //    return null;
        //}

        public int currentCandidateId()
        {
            if (gridView1.SelectedRowsCount > 0)
            {
                int row = gridView1.GetSelectedRows().First();
                return int.Parse(gridView1.GetDataRow(row)["CandidateId"].ToString());
            }
            return -1;
        }

        private void gridView1_DoubleClick(object sender, EventArgs e)
        {
            dlgCandidateEdit dlg = new dlgCandidateEdit(currentCandidateId(), null);
            dlg.emitUpdateData += updateData;
            dlg.ShowDialog();
        }

        public void updateData()
        {
            init();
            updateCurrentCandidate();
        }

        private void tableLayoutPanel2_Paint(object sender, PaintEventArgs e)
        {

        }

        public void newToolStripMenuItem_Click(object sender, EventArgs e)
        {
            dlgCandidateEdit dlg = new dlgCandidateEdit(-1, null);
            dlg.emitUpdateData += updateData;
            dlg.ShowDialog();
        }

        public void editToolStripMenuItem_Click(object sender, EventArgs e)
        {
            dlgCandidateEdit dlg = new dlgCandidateEdit(currentCandidateId(), null);
            dlg.emitUpdateData += updateData;
            dlg.ShowDialog();
        }

        public void deleteToolStripMenuItem_Click(object sender, EventArgs e)
        {
            if (XtraMessageBox.Show("Are you sure to delete?", "Notice", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                try {

                    CandidateManager.deleteCadidate(currentCandidateId());
                    updateData();
                } 
                catch (Exception ex)
                {
                    XtraMessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }
        }

        public void AddJobToPipeLine()
        {
            ucCandidateManager1.AddJobToPipeLine();
        }

        public void logActivity()
        {
            ucCandidateManager1.logActivity();
        }
    }
}

